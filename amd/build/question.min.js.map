{"version":3,"file":"question.min.js","sources":["../src/question.js"],"sourcesContent":["/**\n * Javascript entry point for showing an Algebrakit question.\n * - To guarantee the student input is stored, the submit function is\n *   called when the student clicks the \"Next\" button.\n */\nimport Selectors from './selectors';\n\n/* eslint-disable no-undef */\nconst AK = (typeof(AlgebraKIT) == 'undefined')\n    ?{\n        config: {}\n    } :{\n        AlgebraKIT\n    };\n/* eslint-enable */\n\nexport const init = (cdnUrl) => {\n    // Let requireJS know where to find the jsxgraphcore library\n    let existingConfig = require.s.contexts._.config;\n    existingConfig.paths['jsxgraphcore'] =  cdnUrl.replace('akit-widgets', 'jsxgraphcore').replace('.js', '');\n\n    // Load the Algebrakit library\n    if (!AK._api) {\n        let script = document.createElement('script');\n        script.src = cdnUrl;\n        document.body.appendChild(script);\n    }\n\n    new AKQuestion();\n};\n\nclass AKQuestion {\n    submitClicked = false;\n\n    get form() {\n        return document.querySelector(Selectors.actions.reponseForm);\n    }\n    get nextButton() {\n        if(!this.form) {\n            return;\n        }\n        return this.form.querySelector('input[name=\"next\"]');\n    }\n    get prevButton() {\n        if(!this.form) {\n            return;\n        }\n        return this.form.querySelector('input[name=\"previous\"]');\n    }\n    get exercise() {\n        if(!this.form) {\n            return;\n        }\n        return this.form.querySelector('akit-exercise');\n    }\n\n    constructor() {\n        this.nextButton?.addEventListener('click', (evt) => this.submitQuestion(evt, true));\n        this.prevButton?.addEventListener('click', (evt) => this.submitQuestion(evt, false));\n    }\n\n    async submitQuestion(evt, next) {\n        if(this.submitClicked) {\n            // prevent loop\n        } else {\n            evt.preventDefault();\n            this.submitClicked = true;\n            await this.exercise.submit();\n            if(next) {\n                this.nextButton.click();\n            } else {\n                this.prevButton.click();\n            }\n        }\n    }\n}"],"names":["AK","AlgebraKIT","config","cdnUrl","require","s","contexts","_","paths","replace","_api","script","document","createElement","src","body","appendChild","AKQuestion","form","querySelector","Selectors","actions","reponseForm","nextButton","this","prevButton","exercise","constructor","addEventListener","evt","submitQuestion","next","submitClicked","preventDefault","submit","click"],"mappings":"qPAQMA,GAA4B,oBAAfC,WACd,CACGC,OAAQ,IACT,CACCD,WAAAA,0BAIaE,YAEIC,QAAQC,EAAEC,SAASC,EAAEL,OAC3BM,MAAf,aAAwCL,OAAOM,QAAQ,eAAgB,gBAAgBA,QAAQ,MAAO,KAGjGT,GAAGU,KAAM,KACNC,OAASC,SAASC,cAAc,UACpCF,OAAOG,IAAMX,OACbS,SAASG,KAAKC,YAAYL,YAG1BM,kBAGFA,WAGEC,kBACON,SAASO,cAAcC,mBAAUC,QAAQC,aAEhDC,oBACIC,KAAKN,YAGFM,KAAKN,KAAKC,cAAc,sBAE/BM,oBACID,KAAKN,YAGFM,KAAKN,KAAKC,cAAc,0BAE/BO,kBACIF,KAAKN,YAGFM,KAAKN,KAAKC,cAAc,iBAGnCQ,qNAxBgB,iCAyBPJ,yDAAYK,iBAAiB,SAAUC,KAAQL,KAAKM,eAAeD,KAAK,mCACxEJ,yDAAYG,iBAAiB,SAAUC,KAAQL,KAAKM,eAAeD,KAAK,0BAG5DA,IAAKE,MACnBP,KAAKQ,gBAGJH,IAAII,sBACCD,eAAgB,QACfR,KAAKE,SAASQ,SACjBH,UACMR,WAAWY,aAEXV,WAAWU"}