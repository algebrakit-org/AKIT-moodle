{"version":3,"file":"editor.min.js","sources":["../src/editor.js"],"sourcesContent":["/**\n * Javascript entry point for the editor functionality.\n */\n\nimport Selectors from './selectors';\n\nexport const init = (cdnUrl, proxyUrl, useEditor, audienceSpec, blacklist) => {\n    new AKEditor(cdnUrl, proxyUrl, useEditor, audienceSpec, blacklist);\n\n};\n\nclass AKEditor {\n    get runButton() {\n        return document.querySelector(Selectors.actions.runButton);\n    }\n    get authoringComponent() {\n      return document.querySelector(Selectors.actions.authoringComponent);\n    }\n    get previewComponent() {\n        return document.querySelector(Selectors.actions.previewComponent);\n    }\n    get editorContainer() {\n      return document.querySelector(Selectors.actions.editorContainer);\n    }\n    get previewContainer() {\n        return document.querySelector(Selectors.actions.previewContainer);\n    }\n    get jsonInputElement() {\n        return document.querySelector(Selectors.actions.jsonInputElement);\n    }\n    get exerciseIdInputElement() {\n      return document.querySelector(Selectors.actions.exerciseIdInputElement);\n    }\n\n    spec = null;\n    cdnUrl = null;\n    proxyUrl = null;\n    useEditor = false;\n    audienceSpec = null;\n    blacklist = null;\n    AK = null; // AlgebraKIT instance\n\n    constructor(cdnUrl, proxyUrl, useEditor, audienceSpec, blacklist) {\n        this.cdnUrl = cdnUrl;\n        this.proxyUrl = proxyUrl;\n        this.useEditor = !!useEditor;\n        this.audienceSpec = audienceSpec;\n        this.blacklist = blacklist;\n\n        // get the spec from a hidden input field in the moodle form\n        let jsonString = this.jsonInputElement.value;\n        let exerciseId = this.exerciseIdInputElement.value;\n\n        let showEditor = this.useEditor;\n\n        // override setting for old questions that were created with a diferent setting\n        if(exerciseId && !jsonString) {\n          showEditor = false;\n        } else if(!exerciseId && jsonString) {\n          showEditor = true;\n        }\n\n        // Let requireJS know where to find the jsxgraphcore library\n        let existingConfig = require.s.contexts._.config;\n        existingConfig.paths['jsxgraphcore'] =  cdnUrl.replace('akit-widgets', 'jsxgraphcore').replace('.js', '');\n\n        if(showEditor) {\n          if (jsonString) {\n            this.spec = JSON.parse(jsonString);\n          }\n          this.loadEditor();\n        }\n    }\n\n    async loadEditor() {\n      this.exerciseIdInputElement.style.display = 'none';\n\n      if(!window['AlgebraKIT']) {\n        window['AlgebraKIT'] = {\n          config: {\n              secureProxy: {\n                  url: this.proxyUrl\n              }\n          }\n        };\n        await this.addScript(this.cdnUrl);\n      }\n\n      this.AK = window['AlgebraKIT'];\n\n      this.editorContainer.innerHTML = `\n      <akit-exercise-editor audiences='${this.audienceSpec}'\n         allow-assets=\"false\" enable-preview=\"false\" enable-basic-info=\"false\"\n         interaction-blacklist='${this.blacklist}' enable-id-field=\"false\">\n      </akit-exercise-editor>\n      <div class=\"qtype_algebrakit-editor-button-wrapper\">\n        <button class=\"algebrakit-button\" data-action=\"qtype_algebrakit/editor-run_button\" type=\"button\">Preview</button>\n      </div>\n      <div class=\"qtype_algebrakit-editor-akit-preview\" data-action=\"qtype_algebrakit/editor-preview_div\">\n      </div>\n      `;\n\n      await this.waitForEditorAvailable(0);\n\n      if (this.spec) {\n        await this.authoringComponent.updateExercise(this.spec);\n      } else {\n        this.spec = await this.authoringComponent.getExercise();\n      }\n\n      this.authoringComponent.addWidgetListener('exerciseChanged', ()=>this.saveSpec());\n      this.runButton.addEventListener('click', this.run.bind(this));\n    }\n\n    async saveSpec() {\n      if (this.authoringComponent) {\n        // Read the exercise definition from the authoring component\n        this.spec = await this.authoringComponent.getExercise();\n\n        // Update the value of the hidden element\n        this.jsonInputElement.value = JSON.stringify(this.spec);\n      }\n  }\n\n    async run() {\n        this.previewContainer.innerHTML =\n        `<akit-exercise-preview show-run-button=\"false\" exercise-id=\"${this.spec.id}\"></akit-exercise-preview>`;\n\n        await this.AK.waitUntilReady(this.previewComponent);\n\n        this.previewComponent.run();\n    }\n\n    async addScript(url) {\n        return new Promise((resolve, reject) => {\n            const script = document.createElement('script');\n            script.src = url;\n            script.onload = resolve;\n            script.onerror = reject;\n            document.head.appendChild(script);\n        });\n    }\n\n    async waitForEditorAvailable(iter) {\n      if(iter>100) {\n        throw new Error(\"AlgebraKIT editor not available\");\n      }\n      if(!this.authoringComponent.updateExercise) {\n        await new Promise(resolve => setTimeout(resolve, 100));\n        return this.waitForEditorAvailable(iter+1);\n      }\n    }\n}\n\n"],"names":["cdnUrl","proxyUrl","useEditor","audienceSpec","blacklist","AKEditor","runButton","document","querySelector","Selectors","actions","authoringComponent","previewComponent","editorContainer","previewContainer","jsonInputElement","exerciseIdInputElement","constructor","jsonString","this","value","exerciseId","showEditor","require","s","contexts","_","config","paths","replace","spec","JSON","parse","loadEditor","style","display","window","secureProxy","url","addScript","AK","innerHTML","waitForEditorAvailable","updateExercise","getExercise","addWidgetListener","saveSpec","addEventListener","run","bind","stringify","id","waitUntilReady","Promise","resolve","reject","script","createElement","src","onload","onerror","head","appendChild","iter","Error","setTimeout"],"mappings":"+ZAMoB,CAACA,OAAQC,SAAUC,UAAWC,aAAcC,iBACxDC,SAASL,OAAQC,SAAUC,UAAWC,aAAcC,kBAItDC,SACEC,uBACOC,SAASC,cAAcC,mBAAUC,QAAQJ,WAEhDK,gCACKJ,SAASC,cAAcC,mBAAUC,QAAQC,oBAE9CC,8BACOL,SAASC,cAAcC,mBAAUC,QAAQE,kBAEhDC,6BACKN,SAASC,cAAcC,mBAAUC,QAAQG,iBAE9CC,8BACOP,SAASC,cAAcC,mBAAUC,QAAQI,kBAEhDC,8BACOR,SAASC,cAAcC,mBAAUC,QAAQK,kBAEhDC,oCACKT,SAASC,cAAcC,mBAAUC,QAAQM,wBAWlDC,YAAYjB,OAAQC,SAAUC,UAAWC,aAAcC,uCARhD,oCACE,sCACE,wCACC,uCACG,uCACH,gCACP,WAGIJ,OAASA,YACTC,SAAWA,cACXC,YAAcA,eACdC,aAAeA,kBACfC,UAAYA,cAGbc,WAAaC,KAAKJ,iBAAiBK,MACnCC,WAAaF,KAAKH,uBAAuBI,MAEzCE,WAAaH,KAAKjB,UAGnBmB,aAAeH,WAChBI,YAAa,GACJD,YAAcH,aACvBI,YAAa,GAIMC,QAAQC,EAAEC,SAASC,EAAEC,OAC3BC,MAAf,aAAwC5B,OAAO6B,QAAQ,eAAgB,gBAAgBA,QAAQ,MAAO,IAEnGP,aACGJ,kBACGY,KAAOC,KAAKC,MAAMd,kBAEpBe,sCAKJjB,uBAAuBkB,MAAMC,QAAU,OAExCC,OAAM,aACRA,OAAM,WAAiB,CACrBT,OAAQ,CACJU,YAAa,CACTC,IAAKnB,KAAKlB,kBAIdkB,KAAKoB,UAAUpB,KAAKnB,cAGvBwC,GAAKJ,OAAM,gBAEXvB,gBAAgB4B,6DACctB,KAAKhB,6IAEZgB,KAAKf,qZAS3Be,KAAKuB,uBAAuB,GAE9BvB,KAAKW,WACDX,KAAKR,mBAAmBgC,eAAexB,KAAKW,WAE7CA,WAAaX,KAAKR,mBAAmBiC,mBAGvCjC,mBAAmBkC,kBAAkB,mBAAmB,IAAI1B,KAAK2B,kBACjExC,UAAUyC,iBAAiB,QAAS5B,KAAK6B,IAAIC,KAAK9B,wBAInDA,KAAKR,0BAEFmB,WAAaX,KAAKR,mBAAmBiC,mBAGrC7B,iBAAiBK,MAAQW,KAAKmB,UAAU/B,KAAKW,wBAK7ChB,iBAAiB2B,gFACyCtB,KAAKW,KAAKqB,uCAEnEhC,KAAKqB,GAAGY,eAAejC,KAAKP,uBAE7BA,iBAAiBoC,sBAGVV,YACL,IAAIe,SAAQ,CAACC,QAASC,gBACnBC,OAASjD,SAASkD,cAAc,UACtCD,OAAOE,IAAMpB,IACbkB,OAAOG,OAASL,QAChBE,OAAOI,QAAUL,OACjBhD,SAASsD,KAAKC,YAAYN,wCAILO,SACxBA,KAAK,UACA,IAAIC,MAAM,uCAEd7C,KAAKR,mBAAmBgC,4BACpB,IAAIU,SAAQC,SAAWW,WAAWX,QAAS,OAC1CnC,KAAKuB,uBAAuBqB,KAAK"}