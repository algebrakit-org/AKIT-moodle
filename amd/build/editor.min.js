define("qtype_algebrakit/editor",["exports","./selectors"],(function(_exports,_selectors){var obj;function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_selectors=(obj=_selectors)&&obj.__esModule?obj:{default:obj};_exports.init=(cdnUrl,proxyUrl,useEditor,audienceSpec,blacklist)=>{new AKEditor(cdnUrl,proxyUrl,useEditor,audienceSpec,blacklist)};class AKEditor{get runButton(){return document.querySelector(_selectors.default.actions.runButton)}get authoringComponent(){return document.querySelector(_selectors.default.actions.authoringComponent)}get previewComponent(){return document.querySelector(_selectors.default.actions.previewComponent)}get editorContainer(){return document.querySelector(_selectors.default.actions.editorContainer)}get previewContainer(){return document.querySelector(_selectors.default.actions.previewContainer)}get jsonInputElement(){return document.querySelector(_selectors.default.actions.jsonInputElement)}get exerciseIdInputElement(){return document.querySelector(_selectors.default.actions.exerciseIdInputElement)}constructor(cdnUrl,proxyUrl,useEditor,audienceSpec,blacklist){_defineProperty(this,"spec",null),_defineProperty(this,"cdnUrl",null),_defineProperty(this,"proxyUrl",null),_defineProperty(this,"useEditor",!1),_defineProperty(this,"audienceSpec",null),_defineProperty(this,"blacklist",null),_defineProperty(this,"AK",null),this.cdnUrl=cdnUrl,this.proxyUrl=proxyUrl,this.useEditor=!!useEditor,this.audienceSpec=audienceSpec,this.blacklist=blacklist;let jsonString=this.jsonInputElement.value,exerciseId=this.exerciseIdInputElement.value,showEditor=this.useEditor;exerciseId&&!jsonString?showEditor=!1:!exerciseId&&jsonString&&(showEditor=!0),showEditor&&(jsonString&&(this.spec=JSON.parse(jsonString)),this.loadEditor())}async loadEditor(){this.exerciseIdInputElement.style.display="none",window.AlgebraKIT||(window.AlgebraKIT={config:{secureProxy:{url:this.proxyUrl}}},await this.addScript(this.cdnUrl)),this.AK=window.AlgebraKIT,this.editorContainer.innerHTML="\n      <akit-exercise-editor audiences='".concat(this.audienceSpec,'\'\n         allow-assets="false" enable-preview="false" enable-basic-info="false"\n         interaction-blacklist=\'').concat(this.blacklist,'\' enable-id-field="false">\n      </akit-exercise-editor>\n      <div class="qtype_algebrakit-editor-button-wrapper">\n        <button class="algebrakit-button" data-action="qtype_algebrakit/editor-run_button" type="button">Preview</button>\n      </div>\n      <div class="qtype_algebrakit-editor-akit-preview" data-action="qtype_algebrakit/editor-preview_div">\n      </div>\n      '),await this.waitForEditorAvailable(0),this.spec?await this.authoringComponent.updateExercise(this.spec):this.spec=await this.authoringComponent.getExercise(),this.authoringComponent.addWidgetListener("exerciseChanged",(()=>this.saveSpec())),this.runButton.addEventListener("click",this.run.bind(this))}async saveSpec(){this.authoringComponent&&(this.spec=await this.authoringComponent.getExercise(),this.jsonInputElement.value=JSON.stringify(this.spec))}async run(){this.previewContainer.innerHTML='<akit-exercise-preview show-run-button="false" exercise-id="'.concat(this.spec.id,'"></akit-exercise-preview>'),await this.AK.waitUntilReady(this.previewComponent),this.previewComponent.run()}async addScript(url){return new Promise(((resolve,reject)=>{const script=document.createElement("script");script.src=url,script.onload=resolve,script.onerror=reject,document.head.appendChild(script)}))}async waitForEditorAvailable(iter){if(iter>100)throw new Error("AlgebraKIT editor not available");if(!this.authoringComponent.updateExercise)return await new Promise((resolve=>setTimeout(resolve,100))),this.waitForEditorAvailable(iter+1)}}}));

//# sourceMappingURL=editor.min.js.map