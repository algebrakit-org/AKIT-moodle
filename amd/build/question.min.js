define("qtype_algebrakit/question",["exports","./selectors"],(function(_exports,_selectors){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_selectors=(obj=_selectors)&&obj.__esModule?obj:{default:obj};const AK="undefined"==typeof AlgebraKIT?{config:{}}:{AlgebraKIT:AlgebraKIT};_exports.init=cdnUrl=>{if(require.s.contexts._.config.paths.jsxgraphcore=cdnUrl.replace("akit-widgets","jsxgraphcore").replace(".js",""),!AK._api){let script=document.createElement("script");script.src=cdnUrl,document.body.appendChild(script)}new AKQuestion};class AKQuestion{get form(){return document.querySelector(_selectors.default.actions.reponseForm)}get nextButton(){if(this.form)return this.form.querySelector('input[name="next"]')}get prevButton(){if(this.form)return this.form.querySelector('input[name="previous"]')}get exercise(){if(this.form)return this.form.querySelector("akit-exercise")}constructor(){var _this$nextButton,_this$prevButton;!function(obj,key,value){key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value}(this,"submitClicked",!1),null===(_this$nextButton=this.nextButton)||void 0===_this$nextButton||_this$nextButton.addEventListener("click",(evt=>this.submitQuestion(evt,!0))),null===(_this$prevButton=this.prevButton)||void 0===_this$prevButton||_this$prevButton.addEventListener("click",(evt=>this.submitQuestion(evt,!1)))}async submitQuestion(evt,next){this.submitClicked||(evt.preventDefault(),this.submitClicked=!0,await this.exercise.submit(),next?this.nextButton.click():this.prevButton.click())}}}));

//# sourceMappingURL=question.min.js.map